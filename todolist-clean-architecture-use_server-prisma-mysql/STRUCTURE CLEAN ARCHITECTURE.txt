### DEPENDANCES ###
1)
- npm install prisma @prisma/client
- npx prisma init


2). Définition du schéma de la base de données:

Créez un fichier schema.prisma pour définir la structure de votre base de données. Par exemple, pour une application de gestion des tâches:

Extrait de code
model Task {
  id       Int      @id @default(autoincrement())
  title     String
  completed Boolean  @default(false)
  createdAt DateTime @default(autogenerated())
  updatedAt DateTime @updatedAt
}


3) Migration de la base de données:

Exécutez la commande Prisma pour migrer le schéma vers la base de données:

Bash
npx prisma migrate dev



---------------------------------

/todolist-clean-architecture-use_server-prisma-mysql
├── prisma
│   └── schema.prisma
├── public
│   └── favicon.ico
├── src
│   ├── app
│   │   ├── api
│   │   │   └── todos
│   │   │       └── route.ts
│   │   ├── page.tsx
│   │   └── layout.tsx
│   ├── core
│   │   ├── domain
│   │   │   ├── entities
│   │   │   │   └── Todo.ts
│   │   │   └── repositories
│   │   │       └── ITodoRepository.ts
│   │   ├── usecases
│   │   │   └── TodoUseCases.ts
│   │   └── dtos
│   │       └── TodoDTO.ts
│   ├── infrastructure
│   │   ├── database
│   │   │   └── prisma.ts
│   │   └── repositories
│   │       └── PrismaTodoRepository.ts
│   ├── presentation
│   │   ├── components
│   │   │   ├── TodoList.tsx
│   │   │   ├── TodoItem.tsx
│   │   │   └── TodoForm.tsx
│   │   └── hooks
│   │       └── useTodos.ts
│   └── styles
│       └── globals.css
├── .env
├── .gitignore
├── next.config.js
├── package.json
└── tsconfig.json